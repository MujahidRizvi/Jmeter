<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">false</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-268" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent&#x9;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/117.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            <stringProp name="RegexExtractor.refname">non</stringProp>
            <stringProp name="RegexExtractor.regex">nonce=(.+?).u0026</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NON-Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            <stringProp name="RegexExtractor.refname">opid</stringProp>
            <stringProp name="RegexExtractor.regex">AuthenticationProperties%3d(.+?)%26</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">OPID-Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            <stringProp name="RegexExtractor.refname">auth</stringProp>
            <stringProp name="RegexExtractor.regex">Properties%3d(.+?)%26Redirect</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">AUTH-Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-519" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#12 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#12</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Encoding</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#12_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#0 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#0</stringProp>
            <stringProp name="RegexExtractor.regex">f\&amp;max_age\=(.+?)00\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#4 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#4</stringProp>
            <stringProp name="RegexExtractor.regex">8315059493(.+?)1568\.Y2JkM</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#9 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#9</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#9_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-570" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="code" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">code</stringProp>
                <stringProp name="Argument.value">${code#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="id_token" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id_token</stringProp>
                <stringProp name="Argument.value">${id_token#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">state</stringProp>
                <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties=AQAAANCMnd8BFdERjHoAwE_Cl-sBAAAAao8mva3-oUSY2BFAINdqFgAAAAACAAAAAAAQZgAAAAEAACAAAAB46nUgf7LMyrZkD_NqFVg8yFCllpfMyO-5loLnCEZPPwAAAAAOgAAAAAIAACAAAADo2C6j8xVJbqCvx8Q_6gpUKPpHQs_7MqCq38plZUxOv1AAAAA3xK2ElMdbRjIe71xzHMkl05i4tnVmycsHkv08eS4TvcFYeB5nxyA6fw9k1yNIy5t-_PxPHD5z0MhePAVxvNTE6Yf8JofLCiOnXDbb5WpHgEAAAACqrj6VPjYd1JD2mA5l5KHLVGWZ7eQdMc2ebRSYGz70p5Hz1Mmu0ucl44DlilUdRnr4tcqDaNzP3hUevTOva76m&amp;RedirectTo=https%3A%2F%2Facm-fo-uat01.sandbox.operations.dynamics.com%2F</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="session_state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">session_state</stringProp>
                <stringProp name="Argument.value">${session_state#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#13 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#13</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Encoding</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#13_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#10 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#10</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#10_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/ba83715b-5f25-47fa-ba0a-37f196149d99/oauth2/authorize-520" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="response_mode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">response_mode</stringProp>
                <stringProp name="Argument.value">form_post</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="response_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">response_type</stringProp>
                <stringProp name="Argument.value">code id_token</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
                <stringProp name="Argument.value">openid profile</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">state</stringProp>
                <stringProp name="Argument.value">${state#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="nonce" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">nonce</stringProp>
                <stringProp name="Argument.value">638315059493241568.Y2JkMmU4NWEtOWMyMS00YzU4LWJlNzktNTdiNmQ2OWNhMjI0Y2QwM2Y3NzEtNjZkOC00M2JkLWExM2YtNzRlYTU4YmQ0M2Uw</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="redirect_uri" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">redirect_uri</stringProp>
                <stringProp name="Argument.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="max_age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">max_age</stringProp>
                <stringProp name="Argument.value">86400</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ba83715b-5f25-47fa-ba0a-37f196149d99/oauth2/authorize</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state#0 (Response Header (&apos;Encoded&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">state#0</stringProp>
            <stringProp name="RegexExtractor.regex">ile\&amp;state\=(.+?)\&amp;nonce\=638</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">state#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#14 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#14</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#14_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#1 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#1</stringProp>
            <stringProp name="RegexExtractor.regex">F\&amp;max_age\=(.+?)00\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#5 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#5</stringProp>
            <stringProp name="RegexExtractor.regex">8315059493(.+?)1568\.Y2JkM</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#5_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#11 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#11</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#11_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/common/GetCredentialType?mkt=en-US-526" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;qa.fo.uat1@car-mart.com&quot;,&quot;isOtherIdpSupported&quot;:false,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;rQQIARAAnVM5j9tWEBZXu-sDidcwXKQKXNgp4lDiTWqBLSiKWkorHjoomWoEnhLPR5FcimIRpAmSdK5T2kAKl3ETBAjgJi62cpsAKdIFTgIYrrZLJK39A5LBw8x738z3AYM382kVraHH95GdoSS8DVfOfH97b8mdm7d__r3-T_WuJz9f0i9_-u3zb55B5CLL4vS4XtfNEHYAfK5nCFpL9cgyQFEDsZ3omQuitGatIz10zbRmgrD-AwS9gqA_IOjZXkrhDI6SCNkgGjhGoCTF1DSs64uhSkgTPpMn4locIohWqkRv0g2k0s-kkeVKYR-TJ9JC9DqIhvVXIqbhUslnkjf1ZQ5BxI1Gb8IXGzyTykGgjVRCC_sbXF39uncks-fZAts6kLil_XbvhgOScBaDNPu2elmVYzvqWByIItvMatsyO8pcc9eLkmzbylw7PWH7LMtKnBhZTLNt8QNPAOyKn3EBnDY3GVYHTJjrOAzUoYY122xHspbt-TbDcuyV9ae7N_8OaRJUpM4duieuk6nfmknL9njOrNtcEMSOuJZhMgC9iOOnirLa8eUruc47fgtgHOUxxbhrLLm8YPozah6rZ0os9NMZLS65Jc7EwVQt5BzdEfHiDOMD0TIGXsem0aIURD9ASJfIonG4NlPBzxHGHhKj3GxrdpOMijVLOauGj66lzprM4JlSKEKLLBFxYSvsuMilEU9pDtMFTo9z5ehRyzDISSzM-V3by8SjxoqnWWi3hYUsGZBnQm98OpnSdt8STcw2BkPttKSRmBRKVAzPkXMzIIhW4AaqNYgSIjOXLV0qFXyh2vlIznWaCj8Z2JabbL5qBE52A_kAZx9g7c35L2O5Kf--et_QGZxGSQMmHYyECdrRYUNHdBinHbRBoUTDajQuqrc2GpFr3YsT4LiB_WL_i6cHr_ah1_sfINXj69dv3q58VLlXudyHnhxs9kbAz365uPax-N3RVw_Lp1zl4qDu44AQOpJGDll_bFmTU8z2TutOseKk0xYSxoqRP2LUh5Ha8U-wY_TxIfT48PDNIfT1tcqPN_7f1r34sHJ566_nf7588uWbv4XXR5_RUjFnBn4C-KhNSS22M3bF6VDs6hNJK0wsX3BznvfoOsekJ_8C0&quot;,&quot;country&quot;:&quot;PK&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;AQABAAEAAAAtyolDObpQQ5VtlI4uGjEPydHnqCsRm6Yv01IijEi9jXk_adanWFxP07oYsmecHH1ilEDnSDywd4HeBXGDGavVX7b-rNSxbZDT5YKPMR08NqnakE07IOpA5GZsuRT0HEiQivMJZWnmf72y5Kqul1xo116V8a8FHdqjzv07-Fy_0gmLksv76YHEwZP-3kaaH-DcRgUGLEyWhSd-wKF8xFgIAWr_271vAczqhlvt8mJV7Plxr4aHkDIXmIm-v-sQgzIryAiGHxdxXSf_Bk0tHyG4U0yExAaCTc6jWOXEukVYdaG6A5w9TLlfv_IojtCcIX-BSs5VHtfqBcQgiyLut7PfqxvVq_2cvccsmH4iAhaMO0iJOw_irBUkGFunPZIcqybTmAIZsHY5Q38SMiH2pZ7i8dAisyu3u9xNo0ApcuVtTJocMQu1GFOkRhuLtAShYnoyWz_Url1NNOj-1ggeAJtEtTQrfJOUmLt83QlHwykG8-VlkUptzFIeBoy2fGnxfKkY5uso2gp6JmESu9GLzaOdeOFSbkRmUtJd5SZ4SXXzNNMrg4OHpytB1F1odoWugS6wpVbWTBi4SThm45s5pm1bOzHol_gdo1_diwXBnfbJCJfBhtv1TwAfDts9oKv52f9RmgE42CeVIhQbeHOwDni0IAA&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="hpgact" elementType="Header">
                <stringProp name="Header.name">hpgact</stringProp>
                <stringProp name="Header.value">1800</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/ba83715b-5f25-47fa-ba0a-37f196149d99/oauth2/authorize?client_id=00000015-0000-0000-c000-000000000000&amp;response_mode=form_post&amp;response_type=code+id_token&amp;scope=openid+profile&amp;state=OpenIdConnect.AuthenticationProperties%3DAQAAANCMnd8BFdERjHoAwE_Cl-sBAAAAao8mva3-oUSY2BFAINdqFgAAAAACAAAAAAAQZgAAAAEAACAAAAB46nUgf7LMyrZkD_NqFVg8yFCllpfMyO-5loLnCEZPPwAAAAAOgAAAAAIAACAAAADo2C6j8xVJbqCvx8Q_6gpUKPpHQs_7MqCq38plZUxOv1AAAAA3xK2ElMdbRjIe71xzHMkl05i4tnVmycsHkv08eS4TvcFYeB5nxyA6fw9k1yNIy5t-_PxPHD5z0MhePAVxvNTE6Yf8JofLCiOnXDbb5WpHgEAAAACqrj6VPjYd1JD2mA5l5KHLVGWZ7eQdMc2ebRSYGz70p5Hz1Mmu0ucl44DlilUdRnr4tcqDaNzP3hUevTOva76m%26RedirectTo%3Dhttps%253A%252F%252Facm-fo-uat01.sandbox.operations.dynamics.com%252F&amp;nonce=638315059493241568.Y2JkMmU4NWEtOWMyMS00YzU4LWJlNzktNTdiNmQ2OWNhMjI0Y2QwM2Y3NzEtNjZkOC00M2JkLWExM2YtNzRlYTU4YmQ0M2Uw&amp;redirect_uri=https%3A%2F%2Facm-fo-uat01.sandbox.operations.dynamics.com%2F&amp;max_age=86400</stringProp>
              </elementProp>
              <elementProp name="canary" elementType="Header">
                <stringProp name="Header.name">canary</stringProp>
                <stringProp name="Header.value">PAQABAAEAAAAtyolDObpQQ5VtlI4uGjEP47KBV94E_POktdMPXhS9QvvQY6YDZghQB690QEfIEyuoR9fqT_-VMacs7A1o_GYYPlLw6D7ZHpIRvgS2CtlfK05-WmY8q2EKnOBBnHEXV8N1m0Dpb_6Fzsbbh2hBCbR4sHKQEwgd0ZkO__my7aH2hkSheVcAzHOmM8wMkZlje3diOnLiby367Z8Bef2L5tJXWSchAbub_YxIbU3QFgPkVyAA</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com</stringProp>
              </elementProp>
              <elementProp name="hpgrequestid" elementType="Header">
                <stringProp name="Header.name">hpgrequestid</stringProp>
                <stringProp name="Header.value">d94b3348-07ca-4d1e-a60f-872b7aa34300</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="hpgid" elementType="Header">
                <stringProp name="Header.name">hpgid</stringProp>
                <stringProp name="Header.value">1104</stringProp>
              </elementProp>
              <elementProp name="client-request-id" elementType="Header">
                <stringProp name="Header.name">client-request-id</stringProp>
                <stringProp name="Header.value">ff2fe1c5-1403-4f6a-b371-37c6bddd7e89</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#20 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#20</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#20_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#4 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#4</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;max_age\&quot;\:(.+?)00\,\&quot;endpoi</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#8 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#8</stringProp>
            <stringProp name="RegexExtractor.regex">r\:\s2\.1\.164(.+?)\.6\s\-\sWUS3\s</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#8_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#13 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#13</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#13_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - username#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">username#1</stringProp>
            <stringProp name="RegexExtractor.regex">sername\&quot;\:\&quot;(.+?)\&quot;\,\&quot;Display</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">username#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/ws/sp/DIQWHZCZ805724SEV7O7/passive-527" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client-request-id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client-request-id</stringProp>
                <stringProp name="Argument.value">ff2fe1c5-1403-4f6a-b371-37c6bddd7e89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="wa" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">wa</stringProp>
                <stringProp name="Argument.value">wsignin1.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="wtrealm" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">wtrealm</stringProp>
                <stringProp name="Argument.value">urn:federation:MicrosoftOnline</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="wctx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">wctx</stringProp>
                <stringProp name="Argument.value">LoginOptions=3&amp;estsredirect=2&amp;estsrequest=rQQIARAAnVNLj9tUFI4nM9OHoFNVlWCFumhZUJz4bWekkXAcJ04m13YeTsbZRH4mjp-xPYnjBWKDgF3XLFuJRZd0g5CQuqGLWXULEgtYoQJSxWp24GTaHwBHV-fee875vqtP95yPymgFPb6P7Awl4e125Yy3p7cW37l5-8dfq_-U7y6kZ0v6xQ-_fPrVU4icp2mUHFermuHDdgifaymCVhItMPUwq4SRFWupEwZJxdwEmu8YScUI_ep3EPQSgn6HoKd7CYUzOEoiZI2o4RiBkhRTUbGOC3yFEMd8Ko3BBgwQRM0VojvueGLupuLQdES_h0ljcQ4WbUTFemuAqbiY86m4mLgShyCg4OiO-ayIp2Le99ShQqh-r4gr65_3jiT2PJ1jWxfGTm79vXfDDmN_GoVJ-nX5sixFVtA2uTAILCOtbMusIHWMnRY53spKHSs5YXssy4ocCEym3jT5_kII2TU_5Tw4qRcZVgsZf6XhcKgMVKzeZNuiuWzOthmWY6-sN9nd-TeROkEFysymu2ATT9zGVFw2RzNm0-Q8L7LBRoJJL-wGHD-R5fUOL13Rtd_gGyHGUQsmG3X0JbfKmN6UmkXKqRwJvWRKgyW3xJnImyiZtEJ3QDw7xXgPmHp_0bZoNMsF4HoI6RBpMPI3RiK4K4SxBsRwZTRVq04G2Yal7HXNRTdie0Om8FTOZKFB5giYWzI7ylbikKdUm-mEdpdzpOCsoevkOBJm_E72Ml5QI3mhmmingfks6ZGnQnfUGk9oq2cCA7P0_kBt5TQSkUKOAv8cOTc8gmh4jqeY_SAmUmPZ0MRcxueKtRpKK42m_A_7lunExVcNw5NdQz7A2QdYs1j_pS2L8m_L93WNwWmU1GHSxkiYoG0N1jVEg3HaRmsUStTMWu2ifKvgCBzzXhSHtuNZv5XfW2oVO6wUD6GfGFoM-1qcbkmf73_25ODlPvRq_x2kfHz9-s3bpfdL90qX-9Djg2KiBPz0p4trH4Bvjr54mD_hShcHVRcPCaEtquSAdUemOW5h1qJVtbM1J7YaiB_J-uqMUR4GSts9wY7RR4fQo8PD14fQl9dK39_4f_P4_N3S5a0_n_3x4vHnr_8SXh19DKQWdoZqtUxZq1RvgJuWIWSgGfExG8UoZs-Esd00wTBV3JN_AQ2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cbcxt" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cbcxt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">qa.fo.uat1@car-mart.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="mkt" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">mkt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="lc" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sso-e899eff1.sso.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ws/sp/DIQWHZCZ805724SEV7O7/passive</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - authkey#0 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">authkey#0</stringProp>
            <stringProp name="RegexExtractor.regex">t\?authkey\=(.+?)\&amp;scid\=be4a</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">authkey#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#21 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#21</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#21_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#14 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#14</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#14_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/email_first-528" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="authkey" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">authkey</stringProp>
                <stringProp name="Argument.value">AS71C152U9FINZR6NDOU</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="scid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">scid</stringProp>
                <stringProp name="Argument.value">be4a6fdd9d564642bffa70fbe918d35b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="req-trace-group" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">req-trace-group</stringProp>
                <stringProp name="Argument.value">bd2e3239c164fde74e7e7d47</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/email_first</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/login/-529" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="authkey" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">authkey</stringProp>
                <stringProp name="Argument.value">${authkey#1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="scid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">scid</stringProp>
                <stringProp name="Argument.value">be4a6fdd9d564642bffa70fbe918d35b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/login/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - authkey#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">authkey#2</stringProp>
            <stringProp name="RegexExtractor.regex">\-authkey\=\&quot;(.+?)\&quot;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">authkey#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#23 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#23</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#23_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#9 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#9</stringProp>
            <stringProp name="RegexExtractor.regex">80efa51d80(.+?)2aff3ef9a4</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#9_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - _xsrf#0 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">_xsrf#0</stringProp>
            <stringProp name="RegexExtractor.regex">ata\-xsrf\=\&quot;(.+?)\&quot;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">_xsrf#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#16 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#16</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#16_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/logo-530" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/logo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/login/?authkey=AS8G65QTTGKRFLDW05Z6&amp;scid=be4a6fdd9d564642bffa70fbe918d35b</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#24 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#24</stringProp>
            <stringProp name="RegexExtractor.regex"> X\-Cont(.+?)t\-Type\-Opt</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#24_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#17 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#17</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#17_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-531" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#25 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#25</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#25_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-532" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#26 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#26</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#26_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-533" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#27 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#27</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#27_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v.js-534" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="p" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">p</stringProp>
                <stringProp name="Argument.value">0.004220639094063339</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stats-chrome.space</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#4 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#4</stringProp>
            <stringProp name="RegexExtractor.regex">6\)\;let\s_0x(.+?)f53\=_0x20e</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#5 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#5</stringProp>
            <stringProp name="RegexExtractor.regex">x22b5d1\(0x(.+?)\)\,\&apos;Cvkgj\&apos;\:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#5_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#28 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#28</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#28_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#1</stringProp>
            <stringProp name="RegexExtractor.regex">\,\&apos;kWnBx\&apos;\,\&apos;(.+?)\&apos;\,\&apos;an\|groz</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#5 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#5</stringProp>
            <stringProp name="RegexExtractor.regex">94029\,_0x4(.+?)f4\)\{var\s_0</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#5_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#10 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#10</stringProp>
            <stringProp name="RegexExtractor.regex">ngth\:\s1670(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#10_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/login/-535" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${username#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">0qMed54BO!kyH5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="passwordChangeRequested" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">passwordChangeRequested</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="authkey" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">authkey</stringProp>
                <stringProp name="Argument.value">${authkey#2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_xsrf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_xsrf</stringProp>
                <stringProp name="Argument.value">${_xsrf#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/login/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/login/?authkey=AS8G65QTTGKRFLDW05Z6&amp;scid=be4a6fdd9d564642bffa70fbe918d35b</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#29 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#29</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#29_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#18 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#18</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#18_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/duo/ASK7IFSZ8IVOJ6WF85FE-536" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="scid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">scid</stringProp>
                <stringProp name="Argument.value">be4a6fdd9d564642bffa70fbe918d35b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/duo/ASK7IFSZ8IVOJ6WF85FE</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/login/?authkey=AS8G65QTTGKRFLDW05Z6&amp;scid=be4a6fdd9d564642bffa70fbe918d35b</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - tx#0 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">tx#0</stringProp>
            <stringProp name="RegexExtractor.regex">7\&amp;request\=(.+?)\&amp;req\-trace</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">tx#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#30 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#30</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#30_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#11 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#11</stringProp>
            <stringProp name="RegexExtractor.regex">QWHZCZ8057(.+?)SEV7O7\&amp;req</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#11_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#19 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#19</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#19_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/oauth/v1/authorize-537" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="response_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">response_type</stringProp>
                <stringProp name="Argument.value">code</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">DIQWHZCZ805724SEV7O7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">request</stringProp>
                <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="req-trace-group" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">req-trace-group</stringProp>
                <stringProp name="Argument.value">bd2e3239c164fde74e7e7d47</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oauth/v1/authorize</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/frameless/v4/auth-538" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="tx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tx</stringProp>
                <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="req-trace-group" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">req-trace-group</stringProp>
                <stringProp name="Argument.value">bd2e3239c164fde74e7e7d47</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/frameless/v4/auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - parent#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">parent#1</stringProp>
            <stringProp name="RegexExtractor.regex">t\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">parent#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - tx#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">tx#2</stringProp>
            <stringProp name="RegexExtractor.regex">x\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">tx#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - X-Xsrftoken#0 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">X-Xsrftoken#0</stringProp>
            <stringProp name="RegexExtractor.regex">f\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">X-Xsrftoken#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#32 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#32</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#32_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - _xsrf#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">_xsrf#1</stringProp>
            <stringProp name="RegexExtractor.regex">f\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">_xsrf#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#21 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#21</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#21_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA&amp;req-trace-group=bd2e3239c164fde74e7e7d47-539" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tx</stringProp>
                <stringProp name="Argument.value">${tx#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="parent" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">parent</stringProp>
                <stringProp name="Argument.value">${parent#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_xsrf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_xsrf</stringProp>
                <stringProp name="Argument.value">${_xsrf#1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="java_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">java_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flash_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">flash_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="screen_resolution_width" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">screen_resolution_width</stringProp>
                <stringProp name="Argument.value">${screen_resolution_width#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="screen_resolution_height" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">screen_resolution_height</stringProp>
                <stringProp name="Argument.value">${screen_resolution_height#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="color_depth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">color_depth</stringProp>
                <stringProp name="Argument.value">${color_depth#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ch_ua_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ch_ua_error</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="client_hints" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_hints</stringProp>
                <stringProp name="Argument.value">${color_depth#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="is_cef_browser" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_cef_browser</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="is_ipad_os" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_ipad_os</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="is_ie_compatibility_mode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_ie_compatibility_mode</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="is_user_verifying_platform_authenticator_available" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_user_verifying_platform_authenticator_available</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="user_verifying_platform_authenticator_available_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">user_verifying_platform_authenticator_available_error</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="acting_ie_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">acting_ie_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="react_support" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">react_support</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="react_support_error_message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">react_support_error_message</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA&amp;req-trace-group=bd2e3239c164fde74e7e7d47</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA&amp;req-trace-group=bd2e3239c164fde74e7e7d47</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - sid#1 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">sid#1</stringProp>
            <stringProp name="RegexExtractor.regex">check\?sid\=(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">sid#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#7 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#7</stringProp>
            <stringProp name="RegexExtractor.regex">446\-4abf\-9(.+?)\-da9e1ddbb</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#7_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#33 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#33</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#33_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - page#0 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">page#0</stringProp>
            <stringProp name="RegexExtractor.regex">Location\:\s(.+?)\?sid\=frame</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">page#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/v4/preauth/healthcheck-542" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/v4/preauth/healthcheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA&amp;req-trace-group=bd2e3239c164fde74e7e7d47</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - X-Xsrftoken#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">X-Xsrftoken#1</stringProp>
            <stringProp name="RegexExtractor.regex">_token\&quot;\:\s\&quot;(.+?)\&quot;\,\s\&quot;style\&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">X-Xsrftoken#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - sid#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">sid#2</stringProp>
            <stringProp name="RegexExtractor.regex">rompt\?sid\=(.+?)\&quot;\,\s\&quot;logo_a</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">sid#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#8 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#8</stringProp>
            <stringProp name="RegexExtractor.regex">446\-4abf\-9(.+?)\-da9e1ddbb</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#8_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#34 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#34</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#34_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - sec-ch-ua-platform#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">sec-ch-ua-platform#1</stringProp>
            <stringProp name="RegexExtractor.regex">ac\sOS\sX\&quot;\,\s(.+?)\,\s\&quot;iOS\&quot;\,\s\&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">sec-ch-ua-platform#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#12 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#12</stringProp>
            <stringProp name="RegexExtractor.regex">fb45e85a9a(.+?)832\,9deccd</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#12_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - _xsrf#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">_xsrf#2</stringProp>
            <stringProp name="RegexExtractor.regex">_token\&quot;\:\s\&quot;(.+?)\&quot;\,\s\&quot;style\&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">_xsrf#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#22 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#22</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#22_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-540" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#35 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#35</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#35_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-541" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#36 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#36</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#36_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-543" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#37 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#37</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#37_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/v4/preauth/healthcheck/data-544" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/v4/preauth/healthcheck/data</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="X-Xsrftoken" elementType="Header">
                <stringProp name="Header.name">X-Xsrftoken</stringProp>
                <stringProp name="Header.value">64f787b516b44437bebd32f1f1bf828e</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#38 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#38</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#38_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#13 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#13</stringProp>
            <stringProp name="RegexExtractor.regex">\s\&quot;txid\&quot;\:\s\&quot;(.+?)89781f\-a87</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#13_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#23 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#23</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#23_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-545" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#39 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#39</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#39_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-546" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#40 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#40</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#40_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/logo-547" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">${sid#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/logo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#41 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#41</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#41_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#24 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#24</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#24_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/v4/return-548" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/v4/return</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - tx#3 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">tx#3</stringProp>
            <stringProp name="RegexExtractor.regex">dbb4ea\&amp;tx\=(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">tx#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - sid#3 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">sid#3</stringProp>
            <stringProp name="RegexExtractor.regex">\/auth\?sid\=(.+?)\&amp;tx\=eyJhbG</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">sid#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#9 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#9</stringProp>
            <stringProp name="RegexExtractor.regex">446\-4abf\-9(.+?)\-da9e1ddbb</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#9_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#42 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#42</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#42_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#25 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#25</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#25_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/prompt/v4/log_analytic-549" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">action</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">${page#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="target" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">target</stringProp>
                <stringProp name="Argument.value">health_check</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="browser_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">browser_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="prompt_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prompt_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_error</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="error_message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">error_message</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_method" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_method</stringProp>
                <stringProp name="Argument.value">${auth_method#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_state</stringProp>
                <stringProp name="Argument.value">AUTH_NOT_STARTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="duration" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">duration</stringProp>
                <stringProp name="Argument.value">${duration#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="success" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">success</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">${sid#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/prompt/v4/log_analytic</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="X-Xsrftoken" elementType="Header">
                <stringProp name="Header.name">X-Xsrftoken</stringProp>
                <stringProp name="Header.value">${X-Xsrftoken#0}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#26 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#26</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#26_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/prompt/v4/log_analytic-550" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">action</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">${page#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="target" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">target</stringProp>
                <stringProp name="Argument.value">health_check</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="browser_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">browser_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="prompt_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prompt_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_error</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="error_message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">error_message</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_method" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_method</stringProp>
                <stringProp name="Argument.value">${auth_method#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_state</stringProp>
                <stringProp name="Argument.value">AUTH_NOT_STARTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="duration" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">duration</stringProp>
                <stringProp name="Argument.value">${duration#1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="success" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">success</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">${sid#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/prompt/v4/log_analytic</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="X-Xsrftoken" elementType="Header">
                <stringProp name="Header.name">X-Xsrftoken</stringProp>
                <stringProp name="Header.value">${X-Xsrftoken#0}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#27 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#27</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#27_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-551" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#43 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#43</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#43_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v.js-552" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="p" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">p</stringProp>
                <stringProp name="Argument.value">0.9475058099066593</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stats-chrome.space</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#10 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#10</stringProp>
            <stringProp name="RegexExtractor.regex">6\)\;let\s_0x(.+?)f53\=_0x20e</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#10_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#11 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#11</stringProp>
            <stringProp name="RegexExtractor.regex">x22b5d1\(0x(.+?)\)\,\&apos;Cvkgj\&apos;\:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#11_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#44 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#44</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#44_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#2</stringProp>
            <stringProp name="RegexExtractor.regex">\,\&apos;kWnBx\&apos;\,\&apos;(.+?)\&apos;\,\&apos;an\|groz</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#6 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#6</stringProp>
            <stringProp name="RegexExtractor.regex">94029\,_0x4(.+?)f4\)\{var\s_0</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#6_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#14 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#14</stringProp>
            <stringProp name="RegexExtractor.regex">ngth\:\s1670(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#14_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/frameless/v4/auth-553" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tx</stringProp>
                <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/frameless/v4/auth</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - parent#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">parent#2</stringProp>
            <stringProp name="RegexExtractor.regex">t\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">parent#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - tx#4 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">tx#4</stringProp>
            <stringProp name="RegexExtractor.regex">x\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">tx#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - X-Xsrftoken#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">X-Xsrftoken#2</stringProp>
            <stringProp name="RegexExtractor.regex">f\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">X-Xsrftoken#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#45 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#45</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#45_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - _xsrf#3 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">_xsrf#3</stringProp>
            <stringProp name="RegexExtractor.regex">f\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">_xsrf#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#28 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#28</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#28_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/prompt/v4/log_analytic-554" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="action" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">action</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">${page#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="target" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">target</stringProp>
                <stringProp name="Argument.value">health_check</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="browser_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">browser_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="prompt_language" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prompt_language</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_error</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="error_message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">error_message</stringProp>
                <stringProp name="Argument.value">${prompt_language#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_method" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_method</stringProp>
                <stringProp name="Argument.value">${auth_method#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="auth_state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">auth_state</stringProp>
                <stringProp name="Argument.value">AUTH_NOT_STARTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="duration" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">duration</stringProp>
                <stringProp name="Argument.value">3004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="success" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">success</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
                <stringProp name="Argument.value">${sid#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/prompt/v4/log_analytic</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/v4/preauth/healthcheck?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="X-Xsrftoken" elementType="Header">
                <stringProp name="Header.name">X-Xsrftoken</stringProp>
                <stringProp name="Header.value">${X-Xsrftoken#0}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#29 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#29</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#29_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA-555" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tx</stringProp>
                <stringProp name="Argument.value">${tx#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="parent" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">parent</stringProp>
                <stringProp name="Argument.value">${parent#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_xsrf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_xsrf</stringProp>
                <stringProp name="Argument.value">${_xsrf#1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="java_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">java_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="flash_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">flash_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="screen_resolution_width" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">screen_resolution_width</stringProp>
                <stringProp name="Argument.value">${screen_resolution_width#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="screen_resolution_height" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">screen_resolution_height</stringProp>
                <stringProp name="Argument.value">${screen_resolution_height#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="color_depth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">color_depth</stringProp>
                <stringProp name="Argument.value">${color_depth#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ch_ua_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ch_ua_error</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_hints" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_hints</stringProp>
                <stringProp name="Argument.value">${color_depth#0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_cef_browser" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_cef_browser</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_ipad_os" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_ipad_os</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_ie_compatibility_mode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_ie_compatibility_mode</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="is_user_verifying_platform_authenticator_available" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">is_user_verifying_platform_authenticator_available</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="user_verifying_platform_authenticator_available_error" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">user_verifying_platform_authenticator_available_error</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="acting_ie_version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">acting_ie_version</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="react_support" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">react_support</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="react_support_error_message" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">react_support_error_message</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-e899eff1.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/frame/frameless/v4/auth?sid=frameless-00527876-4446-4abf-9261-da9e1ddbb4ea&amp;tx=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzY29wZSI6Im9wZW5pZCIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vY2FybWFydC1zc28ubG9naW4uZHVvc2VjdXJpdHkuY29tL2R1by9BU0tQRzVWVTZWUVhaTTlBR05JQi9jYWxsYmFjayIsImNsaWVudF9pZCI6IkRJUVdIWkNaODA1NzI0U0VWN083IiwiaXNzIjoiRElRV0haQ1o4MDU3MjRTRVY3TzciLCJhdWQiOiJodHRwczovL2FwaS1lODk5ZWZmMS5kdW9zZWN1cml0eS5jb20iLCJleHAiOjE2OTU5MDk0NjguMjQ4NTI4Nywic3RhdGUiOiJPY05CdVNUOHN1dUhGT3NKYTZIZ3JKUlBheW5IenlwVWdOUWsiLCJyZXNwb25zZV90eXBlIjoiY29kZSIsImR1b191bmFtZSI6InFhLmZvLnVhdDEiLCJ1c2VfZHVvX2NvZGVfYXR0cmlidXRlIjp0cnVlfQ.QQwzab9N5dBr9v6YP0UDEkTU9nDjiQXisYR5E0Cx_eqVfhe3IfO3JrvsCk5xvTLo_O-0Omy_-WnAMWm5wqiRzA</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">${sec-ch-ua-platform#0}</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state#1 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">state#1</stringProp>
            <stringProp name="RegexExtractor.regex">ack\?state\=(.+?)\&amp;duo_code\=</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">state#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#46 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#46</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#46_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-556" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#47 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#47</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#47_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-557" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#48 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#48</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#48_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/duo/ASKPG5VU6VQXZM9AGNIB/callback-558" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">state</stringProp>
                <stringProp name="Argument.value">${state#1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="duo_code" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">duo_code</stringProp>
                <stringProp name="Argument.value">5DfIJC16zTY31481XVBniS3exA3u0Utq</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">carmart-sso.login.duosecurity.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/duo/ASKPG5VU6VQXZM9AGNIB/callback</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://api-e899eff1.duosecurity.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#49 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#49</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#49_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#15 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#15</stringProp>
            <stringProp name="RegexExtractor.regex">ffb874c5ce(.+?)991bbf6c94</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#15_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#30 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#30</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#30_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-559" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#50 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#50</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#50_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/connecttest.txt-560" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="n" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">n</stringProp>
                <stringProp name="Argument.value">1695909197344</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.msftconnecttest.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/connecttest.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/plain</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/plain</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Skype/8.103.0.208 Chrome/102.0.5005.167 Electron/19.1.8 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#51 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#51</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-L</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#51_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v.js-561" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="p" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">p</stringProp>
                <stringProp name="Argument.value">0.3729361356189269</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stats-chrome.space</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#12 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#12</stringProp>
            <stringProp name="RegexExtractor.regex">6\)\;let\s_0x(.+?)f53\=_0x20e</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#12_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#13 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#13</stringProp>
            <stringProp name="RegexExtractor.regex">x22b5d1\(0x(.+?)\)\,\&apos;Cvkgj\&apos;\:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#13_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#52 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#52</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#52_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#3 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#3</stringProp>
            <stringProp name="RegexExtractor.regex">\,\&apos;kWnBx\&apos;\,\&apos;(.+?)\&apos;\,\&apos;an\|groz</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#7 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#7</stringProp>
            <stringProp name="RegexExtractor.regex">94029\,_0x4(.+?)f4\)\{var\s_0</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#7_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#16 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#16</stringProp>
            <stringProp name="RegexExtractor.regex">ngth\:\s1670(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#16_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/login.srf-562" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="wresult" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">wresult</stringProp>
                <stringProp name="Argument.value">&lt;wst:RequestSecurityTokenResponse xmlns:wst=&quot;http://schemas.xmlsoap.org/ws/2005/02/trust&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot; xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot; xmlns:wssc=&quot;http://schemas.xmlsoap.org/ws/2005/02/sc&quot;&gt;&lt;wst:TokenType&gt;urn:oasis:names:tc:SAML:1.0:assertion&lt;/wst:TokenType&gt;&lt;wst:RequestType&gt;http://schemas.xmlsoap.org/ws/2005/02/trust/Issue&lt;/wst:RequestType&gt;&lt;wst:KeyType&gt;http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey&lt;/wst:KeyType&gt;&lt;wst:RequestedSecurityToken&gt;&lt;saml1:Assertion xmlns:saml1=&quot;urn:oasis:names:tc:SAML:1.0:assertion&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot; AssertionID=&quot;DUO_bc4e5e664180d1be63d26752fd5651ac700b349e&quot; IssueInstant=&quot;2023-09-28T13:53:00Z&quot; Issuer=&quot;https://sso-e899eff1.sso.duosecurity.com/ws/sp/DIQWHZCZ805724SEV7O7/mex&quot; MajorVersion=&quot;1&quot; MinorVersion=&quot;1&quot;&gt;&lt;saml1:Conditions NotBefore=&quot;2023-09-28T13:52:30Z&quot; NotOnOrAfter=&quot;2023-09-28T13:58:00Z&quot;&gt;&lt;saml1:AudienceRestrictionCondition&gt;&lt;saml1:Audience&gt;urn:federation:MicrosoftOnline&lt;/saml1:Audience&gt;&lt;/saml1:AudienceRestrictionCondition&gt;&lt;/saml1:Conditions&gt;&lt;ds:Signature&gt;&lt;ds:SignedInfo&gt;&lt;ds:CanonicalizationMethod Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;/&gt;&lt;ds:SignatureMethod Algorithm=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;/&gt;&lt;ds:Reference URI=&quot;#DUO_bc4e5e664180d1be63d26752fd5651ac700b349e&quot;&gt;&lt;ds:Transforms&gt;&lt;ds:Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/&gt;&lt;ds:Transform Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;/&gt;&lt;/ds:Transforms&gt;&lt;ds:DigestMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;/&gt;&lt;ds:DigestValue&gt;M9BZhfY34ssylJzCxalyuJ5C6gBWA5odG8ARMHf58m8=&lt;/ds:DigestValue&gt;&lt;/ds:Reference&gt;&lt;/ds:SignedInfo&gt;&lt;ds:SignatureValue&gt;oFd3Vh3iE61KZ7U4fLSo2PYy/olvzCf6UW1sg6aJ9tSqfP/n9a9IdZn7sptRnSpqO3PfcbhZw4suhWjfqbSmhk1j+vkKq0s3DVx94OyOw+CQCat5HXmAfabXd8CFq9Ua5xnjoS1xHzDbrURKGWerQAH3JuMdNXeH5sPx1tF9c+Wl5WAtHhNMmPxbVNdZ+07wJjhQ8kxw0nl/087MjMfEtLFg1AbkfnpFmAYeufrote0xPdSSyAQD6CO4o7nc74QEp2kWEjc/CWoGC20IiVQHlPTll/Q/ZShOqYxD+YDQP9bDYj1UdwrpzZItPvShoa37PdfdMBNgoJJwQgeyimha3w==&lt;/ds:SignatureValue&gt;&lt;ds:KeyInfo&gt;&lt;ds:X509Data&gt;&lt;ds:X509Certificate&gt;MIIDDTCCAfWgAwIBAgIUYIcnttfW5JkJ/F5j1lDN0LeMXQswDQYJKoZIhvcNAQELBQAwNjEVMBMGA1UECgwMRHVvIFNlY3VyaXR5MR0wGwYDVQQDDBRESVFXSFpDWjgwNTcyNFNFVjdPNzAeFw0yMzAxMjYxNjAxMTRaFw0zODAxMTkwMzE0MDdaMDYxFTATBgNVBAoMDER1byBTZWN1cml0eTEdMBsGA1UEAwwURElRV0haQ1o4MDU3MjRTRVY3TzcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuTjnSrZfUTClfIkPIJE5xX0qELS+m0oDsie3Qj7wXJXzt8YnXwNUkfpFHPT7RNE/wZZ2h6eQc/+BT7UAInAAp6v07n8DX5KOWcAaqFQm4+p6xVWkVrQMPRVw4bzPkw4Atioa7EVL9BVHvsX8VWOuPoKz6dbGXviL1UVfQAqLDQFZ+lryePpKRRrOJ0j4Kwgz+RIHGooSculZSuUnsQpuhsXMTjsFf6Z3xqKZJ7BgfGDGieFK9i6mmQS8iEDDv1WQboCGeqfFmecXv6GI2Uc0m7R7wwKiPvYkKQkGoTNiXGf0JF48+9hCl/3ncktP1TQLIak7fGG3pimXeUbtfuIAxAgMBAAGjEzARMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAIWlY/nCm3V61bb1VCEei5bvwnXR87BLay4cjUx07ZksvyTOAkPxkKQrX0WCivhn2eZBpRz9mJ11H/5e6F/KJFg5Pb01vyU4GxaOSv1nHcwI8Kqba4APsHA5vMDQyALsLxwr7AVkxBWiwC3+H9uIwwwr7w3JCdwzftB0qlr+b9zfd8xFRwsH8LrZHZwTpaTmVTFDAWshlzT+bAFa2XVfTwxRKJX4Rtxmr/HNOFjKM+A1NO7iuPMq+89BktcdiUrM+VhoBzuaelj1yE2Ox2t9pTEpSUYWYhv7k/udNYg6QmRJFtBXaB25m93eV5ql4oJcHJN5bEICeuwsY1wou/r+cnQ=&lt;/ds:X509Certificate&gt;&lt;/ds:X509Data&gt;&lt;/ds:KeyInfo&gt;&lt;/ds:Signature&gt;&lt;saml1:AuthenticationStatement AuthenticationInstant=&quot;2023-09-28T13:52:46Z&quot; AuthenticationMethod=&quot;urn:oasis:names:tc:SAML:1.0:am:password&quot;&gt;&lt;saml1:Subject&gt;&lt;saml1:NameIdentifier Format=&quot;urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified&quot;&gt;3CvgZAX83EOsvnX1bz557g==&lt;/saml1:NameIdentifier&gt;&lt;saml1:SubjectConfirmation&gt;&lt;saml1:ConfirmationMethod&gt;urn:oasis:names:tc:SAML:1.0:cm:bearer&lt;/saml1:ConfirmationMethod&gt;&lt;/saml1:SubjectConfirmation&gt;&lt;/saml1:Subject&gt;&lt;/saml1:AuthenticationStatement&gt;&lt;saml1:AttributeStatement&gt;&lt;saml1:Subject&gt;&lt;saml1:NameIdentifier Format=&quot;urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified&quot;&gt;3CvgZAX83EOsvnX1bz557g==&lt;/saml1:NameIdentifier&gt;&lt;saml1:SubjectConfirmation&gt;&lt;saml1:ConfirmationMethod&gt;urn:oasis:names:tc:SAML:1.0:cm:bearer&lt;/saml1:ConfirmationMethod&gt;&lt;/saml1:SubjectConfirmation&gt;&lt;/saml1:Subject&gt;&lt;saml1:Attribute AttributeName=&quot;UPN&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/claims&quot;&gt;&lt;saml1:AttributeValue xsi:type=&quot;xs:string&quot;&gt;qa.fo.uat1@car-mart.com&lt;/saml1:AttributeValue&gt;&lt;/saml1:Attribute&gt;&lt;saml1:Attribute AttributeName=&quot;authnmethodsreferences&quot; AttributeNamespace=&quot;http://schemas.microsoft.com/claims&quot;&gt;&lt;saml1:AttributeValue xsi:type=&quot;xs:string&quot;&gt;http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/unspecified&lt;/saml1:AttributeValue&gt;&lt;saml1:AttributeValue xsi:type=&quot;xs:string&quot;&gt;http://schemas.microsoft.com/claims/multipleauthn&lt;/saml1:AttributeValue&gt;&lt;/saml1:Attribute&gt;&lt;/saml1:AttributeStatement&gt;&lt;/saml1:Assertion&gt;&lt;/wst:RequestedSecurityToken&gt;&lt;/wst:RequestSecurityTokenResponse&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="wa" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">wa</stringProp>
                <stringProp name="Argument.value">wsignin1.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="wctx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">wctx</stringProp>
                <stringProp name="Argument.value">LoginOptions=3&amp;estsredirect=2&amp;estsrequest=rQQIARAAnVNLj9tUFI4nM9OHoFNVlWCFumhZUJz4bWekkXAcJ04m13YeTsbZRH4mjp-xPYnjBWKDgF3XLFuJRZd0g5CQuqGLWXULEgtYoQJSxWp24GTaHwBHV-fee875vqtP95yPymgFPb6P7Awl4e125Yy3p7cW37l5-8dfq_-U7y6kZ0v6xQ-_fPrVU4icp2mUHFermuHDdgifaymCVhItMPUwq4SRFWupEwZJxdwEmu8YScUI_ep3EPQSgn6HoKd7CYUzOEoiZI2o4RiBkhRTUbGOC3yFEMd8Ko3BBgwQRM0VojvueGLupuLQdES_h0ljcQ4WbUTFemuAqbiY86m4mLgShyCg4OiO-ayIp2Le99ShQqh-r4gr65_3jiT2PJ1jWxfGTm79vXfDDmN_GoVJ-nX5sixFVtA2uTAILCOtbMusIHWMnRY53spKHSs5YXssy4ocCEym3jT5_kII2TU_5Tw4qRcZVgsZf6XhcKgMVKzeZNuiuWzOthmWY6-sN9nd-TeROkEFysymu2ATT9zGVFw2RzNm0-Q8L7LBRoJJL-wGHD-R5fUOL13Rtd_gGyHGUQsmG3X0JbfKmN6UmkXKqRwJvWRKgyW3xJnImyiZtEJ3QDw7xXgPmHp_0bZoNMsF4HoI6RBpMPI3RiK4K4SxBsRwZTRVq04G2Yal7HXNRTdie0Om8FTOZKFB5giYWzI7ylbikKdUm-mEdpdzpOCsoevkOBJm_E72Ml5QI3mhmmingfks6ZGnQnfUGk9oq2cCA7P0_kBt5TQSkUKOAv8cOTc8gmh4jqeY_SAmUmPZ0MRcxueKtRpKK42m_A_7lunExVcNw5NdQz7A2QdYs1j_pS2L8m_L93WNwWmU1GHSxkiYoG0N1jVEg3HaRmsUStTMWu2ifKvgCBzzXhSHtuNZv5XfW2oVO6wUD6GfGFoM-1qcbkmf73_25ODlPvRq_x2kfHz9-s3bpfdL90qX-9Djg2KiBPz0p4trH4Bvjr54mD_hShcHVRcPCaEtquSAdUemOW5h1qJVtbM1J7YaiB_J-uqMUR4GSts9wY7RR4fQo8PD14fQl9dK39_4f_P4_N3S5a0_n_3x4vHnr_8SXh19DKQWdoZqtUxZq1RvgJuWIWSgGfExG8UoZs-Esd00wTBV3JN_AQ2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/login.srf</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://carmart-sso.login.duosecurity.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - parent#3 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">parent#3</stringProp>
            <stringProp name="RegexExtractor.regex">sModes\&quot;\:\{\&quot;(.+?)\&quot;\:0\,\&quot;Submi</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">parent#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#53 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#53</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#53_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#8 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#8</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;max_age\&quot;\:(.+?)00\,\&quot;endpoi</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#8_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - sec-ch-ua-platform#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">sec-ch-ua-platform#2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;\:\{\&quot;name\&quot;\:(.+?)\,\&quot;version\&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">sec-ch-ua-platform#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#17 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#17</stringProp>
            <stringProp name="RegexExtractor.regex">r\:\s2\.1\.164(.+?)\.6\s\-\sWUS3\s</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#17_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - browser_language#1 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">browser_language#1</stringProp>
            <stringProp name="RegexExtractor.regex">\scontent\=\&quot;(.+?)\&quot;\s\/\&gt;\&#xd;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">browser_language#1_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#31 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#31</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#31_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - username#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">username#2</stringProp>
            <stringProp name="RegexExtractor.regex">sername\&quot;\:\&quot;(.+?)\&quot;\,\&quot;sFT\&quot;\:\&quot;A</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">username#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-563" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#54 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#54</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#54_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-564" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#55 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#55</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#55_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-565" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#56 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#56</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#56_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-566" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#57 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#57</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#57_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-567" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#58 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#58</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#58_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v.js-568" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="p" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">p</stringProp>
                <stringProp name="Argument.value">0.9946428010370192</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stats-chrome.space</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#14 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#14</stringProp>
            <stringProp name="RegexExtractor.regex">6\)\;let\s_0x(.+?)f53\=_0x20e</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#14_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#15 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#15</stringProp>
            <stringProp name="RegexExtractor.regex">x22b5d1\(0x(.+?)\)\,\&apos;Cvkgj\&apos;\:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#15_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#59 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#59</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#59_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#4 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#4</stringProp>
            <stringProp name="RegexExtractor.regex">\,\&apos;kWnBx\&apos;\,\&apos;(.+?)\&apos;\,\&apos;an\|groz</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#9 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#9</stringProp>
            <stringProp name="RegexExtractor.regex">94029\,_0x4(.+?)f4\)\{var\s_0</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#9_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#18 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#18</stringProp>
            <stringProp name="RegexExtractor.regex">ngth\:\s1670(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#18_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/kmsi-569" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="LoginOptions" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">LoginOptions</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">28</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctx" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ctx</stringProp>
                <stringProp name="Argument.value">rQQIARAAnVNLj9tUFI4nM9OHoFNVlWCFumhZUJz4bWekkXAcJ04mfuThZJxN5Gfi-HEd25M4XiA2CNh1zbKVWHRJNwgJqRu6mFW3ILGAFSogVaxmB06m_QFwdHXuveec77v6dM_5qIxW0OP7yM5QEt5uV858e3pr8Z2bt3_8tfpP-e5CfrakX_zwy6dfPYXIeZpGyXG1qpsB7AD4XE8RtJLooWWArAIiO9ZTF4RJxdqEeuCaScUEQfU7CHoJQb9D0NO9hMIZHCURskbUcIxASYqpaFjHEwOVkMZ8Ko_FjThAEC1Xie6440u5l0pDy5WCHiaPpbm4aCMa1luLmIZLOZ9Ki4kncwgiFhzdMZ8V8VTK-742VAkt6BVxdf3z3pHMnqdzbOtA7Ob233s3HBAH0wgk6dfly7Ic2WHb4kAY2mZa2ZbZYeqaOy1KvJWVunZywvZYlpU4MbSYetPi-wsBsGt-yvlwUi8yrA6YYKXjMFAHGlZvsm3JWjZn2wzLsVfWm-zu_JtInaBCdebQXXETT7zGVFo2RzNm0-R8P3LEjQyTPuiGHD9RlPUOL1_Rtd_gGwDjqAWTjTrGkltlTG9KzSL1VImEXjKlxSW3xJnIn6iZvEJ3QDw7xXhftIz-om3TaJYLoucjpEuk4SjYmIngrRDGHhDDldnU7DoZZhuWctY1D91I7Q2ZwlMlU4QGmSPi3FbYUbaShjylOUwHOF3OlcOzhmGQ40iY8TvZy3hBjZSFZqGdBhawpE-eCt1Razyh7Z4lmpht9AdaK6eRiBRyVAzOkXPTJ4iG7_qq1Q9jIjWXDV3KFXyu2quhvNJpKviwb1tuXHzVEJzsGvIBzj7AmsX6L21ZlH9bvm_oDE6jpAGTDkbCBO3osKEjOozTDlqjUKJm1WoX5VsFR-ha96IYOK5v_1Z-b6lXHFApHkI_MfUYDvQ43ZI-3__sycHLfejV_jtI-fj69Zu3S--X7pUu96HHB8VECfjpTxfXPhC_OfriYf6EK10cVD0cEEJb0sgB640sa9zC7EWr6mRrTmo1kCBSjNUZoz4M1bZ3gh2jjw6hR4eHrw_3vrxW-v7G_5vH5--WLm_9-eyPF48_f_2X8OroY1FuYWeoXsvUtUb1Brhlm0ImNiM-ZqMYxZyZMHaaljhMVe_kXw2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hpgrequestid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">hpgrequestid</stringProp>
                <stringProp name="Argument.value">0987bd60-19c6-46fb-b7e4-b148be894000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flowToken" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">flowToken</stringProp>
                <stringProp name="Argument.value">AQABAAEAAAAtyolDObpQQ5VtlI4uGjEP8KMIsNiQ53kKZn-NI8TFfN1to9khlJMcMNV1Rvleaey_clmd1OFWWKogwsSKdrNKRrhn1eH0sJJseapMWhTFkpDhy4wl0aVcQ4WOs8qbchHla6g1avsMpMLkHhwc4EqJCBpTrrcK6gMu7guL6FGCa1Orxfv68CAfygy97_zu3IMNvB1axPdZG0_l--0rlKq5GYsFcJjRua08QjUHJGKSh-Oi2cF4MiRr8h72O6o8tnLGNGIJyJ5EqVPXEuqtaREbyfQCpqj9UYUKT92AkgZKp0tAx2QmQaNigPbFzaUL2yit2C-Wvn2euUfpFcE7OhCti_E3S3KbCyhndMAUc_b7dh4ECC5qiLpVu9ZDeNNJrj50Fca9JjSGD4Pr9_aLr8ZnIMQJNtgfNCQaKAGyjjkQmwFtVNdDo2mz3RfVUkHJdQL_e595TfSudE_6O7kQWaIzARv-_csII68Auf8mAshzlh13mzqiYwh3sgOiXEPrxozE5uNYzHzTgO_oqbkFueCqToKBJuMlRL6PIS8J4scPH18ktQKYRLqe8FgQbr1tn4FNAlMgT5CLFwOoR9xRp4d9HiMUQ_Yy2QGqcj-XzX8bBPA7NEYgYm_Q39jSE0dDd3AE81XB7Z3m9VZvzQPAK6i0xIxi33EiKPw9LLmXgwC-QZFMKwZexXEGGIsNwnOQ60inIvsYMA0qBb4lowutwbTE8O1n6jjQAlckwuG54JjZF3AsBh82UNXVmIT4ZnLA3zrqc_na8XbQDOyeB5Pxyh1VNd7EWAimz2hPAXU1WfefbZJZ5BpguP5IV4JU58KVMCsIeqlQmeAHz9EXf57X6G_AmFNLmb3qmk1Y1KOlFfHhmx2CZrOS8nT6uwytigbPiet5YlPlBRMjhzrWHAQVuU6ika5mF2tPGUjcU9uVQkXcuF3LvB1QtqnNZyyyY68UdVUxT15mivIxU4lTxOIE3wF6c-vs1-zMesZMUn18W1GI08i_orDdGrr_TpTew_FZY6H6iEYGP7D_C0WB_b5hut6ctyHEQWTtIn16KfjC-jbpnIupvMttEMsAasQfOrOYOl6QYSLzK-HKorP6T-ZsKbTDL8AJOKa6fOFCxYtkKwctRTHGewdtdxysRKyZW3gTvYpw-sTCuAmsrS_2QemY2p2tmf-A6lV_7KS_BxoH-Bk-Mrj070_3bc2jErHF8POtY0goO19ZMc7pBJfU1fqYiLFAqtN-lv_V6hTGFFuAfghjoiAA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="canary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">canary</stringProp>
                <stringProp name="Argument.value">k3o4HINY5SAkVddWG2ejG/fxwCNGD0mpPbvX8U+nUIk=3:1:CANARY:j3q/fx5xSvEShMGDzHXs2t9YqAV+1FHnyTePU8MXydY=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="i19" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">i19</stringProp>
                <stringProp name="Argument.value">4025</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/kmsi</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/login.srf</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - code#0 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">code#0</stringProp>
            <stringProp name="RegexExtractor.regex">e\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\&lt;input</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">code#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - id_token#0 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">id_token#0</stringProp>
            <stringProp name="RegexExtractor.regex">n\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\&lt;input</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">id_token#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#60 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#60</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#60_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#10 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#10</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;max_age\&quot;\:(.+?)00\,\&quot;endpoi</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#10_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#19 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#19</stringProp>
            <stringProp name="RegexExtractor.regex">r\:\s2\.1\.164(.+?)\.6\s\-\sEUS\sP</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#19_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - session_state#0 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">session_state#0</stringProp>
            <stringProp name="RegexExtractor.regex">e\&quot;\svalue\=\&quot;(.+?)\&quot;\s\/\&gt;\&lt;noscr</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">session_state#0_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#32 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#32</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#32_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-571" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://login.microsoftonline.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - parent#4 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">parent#4</stringProp>
            <stringProp name="RegexExtractor.regex">tton\)\s\!\=\s\&apos;(.+?)\&apos;\s\|\|\s\$data</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">parent#4_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#16 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#16</stringProp>
            <stringProp name="RegexExtractor.regex">1\s0\-1\.845\.(.+?)\-2\.483\.767</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#16_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#61 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#61</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#61_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#5 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#5</stringProp>
            <stringProp name="RegexExtractor.regex">ark\)\s\!\=\=\s\&quot;(.+?)\&quot;\)\s\{\&#xd;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#5_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#20 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#20</stringProp>
            <stringProp name="RegexExtractor.regex">ont\-size\:\s(.+?)px\;\&#xd;\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#20_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#33 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#33</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#33_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?-577" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;&quot;,&quot;Language&quot;:&quot;&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:0,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;ObjectName&quot;:&quot;sysloadstartpage&quot;,&quot;OpenMethod&quot;:2,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;1&quot;,&quot;CallbackId&quot;:&quot;1&quot;}],&quot;SequenceNumber&quot;:1}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">4e3ec084-727c-426a-9185-0f07d9d9fe40</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - parent#5 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">parent#5</stringProp>
            <stringProp name="RegexExtractor.regex">eMethod\&quot;\:\&quot;(.+?)\&quot;\,\&quot;Columns</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">parent#5_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#62 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#62</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-L</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#62_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#11 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#11</stringProp>
            <stringProp name="RegexExtractor.regex">73459006\-2(.+?)208061\-327</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#11_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#21 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#21</stringProp>
            <stringProp name="RegexExtractor.regex">sid\:\s19\@27(.+?)\@\@S\-1\-19\-1</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#21_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - browser_language#2 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">browser_language#2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Locale\&quot;\:\&quot;(.+?)\&quot;\,\&quot;Startpa</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">browser_language#2_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#34 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#34</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#34_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - username#3 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">username#3</stringProp>
            <stringProp name="RegexExtractor.regex">\{\&quot;Alias\&quot;\:\&quot;(.+?)\&quot;\,\&quot;UserGui</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">username#3_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-579" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">x-requested-with</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#63 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#63</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#63_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/dnl_settings.json-580" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/dnl_settings.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#64 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#64</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#64_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/video_d/1.0.0.5/3/info.json-581" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">videodown.site</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/video_d/1.0.0.5/3/info.json</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">null</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#65 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#65</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#65_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v.js-582" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="p" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">p</stringProp>
                <stringProp name="Argument.value">0.9251218231569649</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stats-chrome.space</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#17 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#17</stringProp>
            <stringProp name="RegexExtractor.regex">6\)\;let\s_0x(.+?)f53\=_0x20e</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#17_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - duration#18 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">duration#18</stringProp>
            <stringProp name="RegexExtractor.regex">x22b5d1\(0x(.+?)\)\,\&apos;Cvkgj\&apos;\:</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">duration#18_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#66 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#66</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#66_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - auth_method#6 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">auth_method#6</stringProp>
            <stringProp name="RegexExtractor.regex">\,\&apos;kWnBx\&apos;\,\&apos;(.+?)\&apos;\,\&apos;an\|groz</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">auth_method#6_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#12 (Response Body (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#12</stringProp>
            <stringProp name="RegexExtractor.regex">94029\,_0x4(.+?)f4\)\{var\s_0</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#12_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#22 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#22</stringProp>
            <stringProp name="RegexExtractor.regex">ngth\:\s1670(.+?)\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#22_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/resources/html/HcmPeopleSearch.htm-583" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/resources/html/HcmPeopleSearch.htm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#67 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#67</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#67_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#35 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#35</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#35_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/resources/html/Calendar.htm-584" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/resources/html/Calendar.htm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#68 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#68</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#68_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#36 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#36</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#36_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/resources/html/TimerControl.htm-585" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/resources/html/TimerControl.htm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#69 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#69</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#69_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#37 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#37</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#37_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-586" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:1,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;GetMenuPaneSettings&quot;,&quot;CallbackId&quot;:&quot;2&quot;}],&quot;SequenceNumber&quot;:2},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;3&quot;}],&quot;SequenceNumber&quot;:3},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;4&quot;}],&quot;SequenceNumber&quot;:4},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;5&quot;}],&quot;SequenceNumber&quot;:5},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;6&quot;}],&quot;SequenceNumber&quot;:6},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneMenu&quot;,&quot;CallbackId&quot;:&quot;7&quot;}],&quot;SequenceNumber&quot;:7},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;8&quot;}],&quot;SequenceNumber&quot;:8}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">485db738-fb08-49ca-a03d-495f4444be6a</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#70 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#70</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-L</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#70_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#13 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#13</stringProp>
            <stringProp name="RegexExtractor.regex">73459006\-2(.+?)208061\-327</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#13_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#23 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#23</stringProp>
            <stringProp name="RegexExtractor.regex">sid\:\s19\@27(.+?)\@\@S\-1\-19\-1</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#23_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#38 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#38</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#38_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/autodiscover/autodiscoverservice.svc/root-587" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">webdir.online.lync.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/autodiscover/autodiscoverservice.svc/root</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#71 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#71</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sap</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#71_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#24 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#24</stringProp>
            <stringProp name="RegexExtractor.regex">t\-Length\:\s(.+?)2\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#24_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#39 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#39</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#39_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Resources/HTML/HcmPersonCard.htm-589" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Resources/HTML/HcmPersonCard.htm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#72 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#72</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\ste</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#72_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#40 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#40</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#40_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/apc/trans.gif-590" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="20d21442935994095654a04dda166578" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">20d21442935994095654a04dda166578</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/apc/trans.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#73 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#73</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#73_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#41 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#41</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#41_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-592" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:2,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:9}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">d0f1e055-7866-4f34-8c72-94ba18fb8233</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#74 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#74</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-L</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#74_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#14 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#14</stringProp>
            <stringProp name="RegexExtractor.regex">73459006\-2(.+?)208061\-327</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#14_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#25 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#25</stringProp>
            <stringProp name="RegexExtractor.regex">sid\:\s19\@27(.+?)\@\@S\-1\-19\-1</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#25_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#42 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#42</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#42_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/apc/trans.gif-594" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="c98a74ef11de7f94601836a88a461053" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">c98a74ef11de7f94601836a88a461053</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/apc/trans.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#75 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#75</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#75_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#43 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#43</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#43_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-596" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:3,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:10},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuSettings&quot;},&quot;CallbackId&quot;:&quot;11&quot;}],&quot;SequenceNumber&quot;:11},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuHelp&quot;},&quot;CallbackId&quot;:&quot;12&quot;}],&quot;SequenceNumber&quot;:12},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;13&quot;,&quot;CommandName&quot;:&quot;Elapsed&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;3_0&quot;,&quot;TargetId&quot;:&quot;6_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:13}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">90078f46-6e16-48be-8f93-ac6e5e5fdc07</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#76 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#76</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-L</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#76_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_height#15 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_height#15</stringProp>
            <stringProp name="RegexExtractor.regex">73459006\-2(.+?)208061\-327</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_height#15_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#26 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#26</stringProp>
            <stringProp name="RegexExtractor.regex">sid\:\s19\@27(.+?)\@\@S\-1\-19\-1</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#26_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#44 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#44</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#44_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/apc/trans.gif-597" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="9dc5c60e8381aef4502e06ddca856df1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">9dc5c60e8381aef4502e06ddca856df1</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/apc/trans.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#77 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#77</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#77_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#45 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#45</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#45_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/apc/100k.gif-599" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="a4a95630e9eae19494d856f6549650e7" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">a4a95630e9eae19494d856f6549650e7</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/apc/100k.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#78 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#78</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#78_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#46 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#46</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#46_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/TelemetryManager.svc/ProcessEventData-600" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;SessionActionEventData&quot;,&quot;SessionAction&quot;:0,&quot;UserAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;,&quot;BrowserName&quot;:&quot;Chrome&quot;,&quot;BrowserVersion&quot;:&quot;117.0.0.0&quot;,&quot;OperatingSystem&quot;:&quot;Windows 10&quot;,&quot;CpuClass&quot;:&quot;amd64&quot;,&quot;BrowserLanguage&quot;:&quot;en-US&quot;,&quot;OSLanguage&quot;:&quot;&quot;,&quot;ApplicationLanguage&quot;:&quot;en-us&quot;,&quot;Locale&quot;:&quot;en-US&quot;,&quot;Density&quot;:&quot;30&quot;,&quot;Theme&quot;:&quot;0&quot;,&quot;ClientVersion&quot;:&quot;7.0.23209.1&quot;,&quot;Device&quot;:&quot;&quot;,&quot;TouchEnabled&quot;:false,&quot;ScreenResolution&quot;:&quot;1536x824&quot;,&quot;ViewPortSize&quot;:&quot;1536x715&quot;,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1695909212744},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:126.79999995231628,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1695909217637},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:7374.100000143051,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1695909217637},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1014.5,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1695909217637},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3419,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1695909217637}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=DefaultDashboard</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">4e3ec084-727c-426a-9185-0f07d9d9fe40</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#79 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#79</stringProp>
            <stringProp name="RegexExtractor.regex">04\sNo\sCont(.+?)t\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#79_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - screen_resolution_width#47 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">screen_resolution_width#47</stringProp>
            <stringProp name="RegexExtractor.regex">\smax\-age\=3(.+?)000\;\sinclu</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">screen_resolution_width#47_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/domainreliability/upload-601" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTPS&quot;,&quot;request_age_ms&quot;:60935,&quot;request_elapsed_ms&quot;:519,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;127.0.0.1:8888&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://www.google.com/&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:59616,&quot;request_elapsed_ms&quot;:263,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://www.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:59353,&quot;request_elapsed_ms&quot;:131,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://www.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#80 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#80</stringProp>
            <stringProp name="RegexExtractor.regex">ort\-To\:\s\{\&quot;(.+?)dpoints\&quot;\:\[</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#80_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - color_depth#27 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">color_depth#27</stringProp>
            <stringProp name="RegexExtractor.regex">023\s13\:53\:(.+?)\sGMT\n</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">color_depth#27_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/r.gif-602" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="MonitorID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">MonitorID</stringProp>
                <stringProp name="Argument.value">d365fo</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">rid</stringProp>
                <stringProp name="Argument.value">abd582e82bd30e497e40d162957375eb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="w3c" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">w3c</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prot" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">prot</stringProp>
                <stringProp name="Argument.value">https:</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="v" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">v</stringProp>
                <stringProp name="Argument.value">js/3.0.1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tag" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">tag</stringProp>
                <stringProp name="Argument.value">{&quot;oid&quot;:null,&quot;sid&quot;:&quot;bdc3126c-6f61-4d89-a383-d801e6342372&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DATA" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">DATA</stringProp>
                <stringProp name="Argument.value">[{&quot;RequestID&quot;:&quot;placeholder.dynamics.com&quot;,&quot;Object&quot;:&quot;trans.gif&quot;,&quot;Conn&quot;:&quot;cold&quot;,&quot;Result&quot;:2344,&quot;T&quot;:1},{&quot;RequestID&quot;:&quot;placeholder.dynamics.com&quot;,&quot;Object&quot;:&quot;trans.gif&quot;,&quot;Conn&quot;:&quot;warm&quot;,&quot;Result&quot;:1252,&quot;T&quot;:1},{&quot;RequestID&quot;:&quot;placeholder.dynamics.com&quot;,&quot;Object&quot;:&quot;100k.gif&quot;,&quot;Conn&quot;:&quot;warm&quot;,&quot;Result&quot;:263,&quot;T&quot;:8}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload.fp.measure.office.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/r.gif</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - prompt_language#81 (Response Header (&apos;Raw&apos;))" enabled="true">
            <stringProp name="RegexExtractor.refname">prompt_language#81</stringProp>
            <stringProp name="RegexExtractor.regex"> Cont(.+?)t\-Type\:\sim</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">prompt_language#81_NOT_FOUND</stringProp>
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-603" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:4,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;VendorPortal&quot;},&quot;CallbackId&quot;:&quot;14&quot;}],&quot;SequenceNumber&quot;:14}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=DefaultDashboard</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">2564715c-d663-4fa4-aab9-63b1005e816f</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-604" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2.700000047683716,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1695909229515},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1345.8999998569489,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1695909229515},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:10.900000095367432,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1695909229515},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1695909229515}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=DefaultDashboard</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">2564715c-d663-4fa4-aab9-63b1005e816f</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-605" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:5,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;NavigationPath&quot;:[&quot;mainmenu&quot;,&quot;VendorPortal&quot;,&quot;Contacts&quot;],&quot;ObjectName&quot;:&quot;vendvendorcontactperson&quot;,&quot;OpenMethod&quot;:0,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;3&quot;,&quot;CallbackId&quot;:&quot;15&quot;}],&quot;SequenceNumber&quot;:15}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=DefaultDashboard</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">47062f76-e709-4b31-b340-562aad479d30</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-606" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1.7999999523162842,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1695909234629},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3091.800000190735,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1695909234629},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:328.7999999523163,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1695909234629},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3215.9000000953674,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1695909234629}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">47062f76-e709-4b31-b340-562aad479d30</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-607" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:6,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;ReportMenuItemUsage&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;VendVendorContactPerson#Display#[\&quot;mainmenu\&quot;,\&quot;VendorPortal\&quot;,\&quot;Contacts\&quot;,\&quot;VendVendorContactPerson\&quot;]#Vendor collaboration,Contacts,All contacts&quot;},&quot;CallbackId&quot;:&quot;16&quot;}],&quot;SequenceNumber&quot;:16}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">e3b5b278-e752-4742-baed-78c4792119a0</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-608" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1695909236053},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1422.5,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1695909236053},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.5,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1695909236053},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1695909236053}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">47062f76-e709-4b31-b340-562aad479d30</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;-609" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;DAT&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:7,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;MainGridFilter&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;161_0&quot;,&quot;TargetId&quot;:&quot;161_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;161_0&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;493_0&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;161_0_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:17}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=DAT&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">c639382a-3b9a-494a-838e-b1ffc984f49c</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-610" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:8,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;17&quot;}],&quot;SequenceNumber&quot;:18},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneMenu&quot;,&quot;CallbackId&quot;:&quot;18&quot;}],&quot;SequenceNumber&quot;:19},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;19&quot;}],&quot;SequenceNumber&quot;:20}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">1ff47409-4301-4c81-aeda-0550a0120e09</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-611" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:9,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;20&quot;}],&quot;SequenceNumber&quot;:21}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">90109f8f-338d-41b4-9f7c-131e071e4f61</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-612" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData UpdateLastSelectedControl Click GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:178.90000009536743,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1695909242048},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData UpdateLastSelectedControl Click GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:5815.200000047684,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1695909242048},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData UpdateLastSelectedControl Click GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.5,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1695909242048},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2463,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1695909242048}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">47062f76-e709-4b31-b340-562aad479d30</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-613" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:10,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;21&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;22&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;250&quot;,25,1],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;161_0&quot;,&quot;TargetId&quot;:&quot;541_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:22}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ee6b3aed-0f37-4ca6-8624-c62e2d2bc1ee</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-614" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.5999999046325684,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1695909244652},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1306.6000001430511,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1695909244652},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:25.5,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1695909244652},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1695909244652}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ee6b3aed-0f37-4ca6-8624-c62e2d2bc1ee</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-615" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:11,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;23&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;24&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;Fahad&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;629_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:23}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">21a2e4a4-60f2-43bb-a244-15c58c2b9f6c</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-616" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.10000014305114746,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1695909246354},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1700.0999999046326,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1695909246354},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.9000000953674316,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1695909246354},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1695909246354}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ee6b3aed-0f37-4ca6-8624-c62e2d2bc1ee</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-617" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:12,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;25&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;26&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;582&quot;,25,1],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;637_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:24}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">c8c136c2-c131-476f-ba76-124157a8aa96</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-618" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:13,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;27&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;28&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;Rauf&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;630_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:25}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">11ca99bc-a75e-4f8a-b3b5-3498252bd680</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-619" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:20.699999809265137,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1695909250316},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2673.2000000476837,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1695909250316},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.7999999523162842,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1695909250316},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1695909250316}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">c8c136c2-c131-476f-ba76-124157a8aa96</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-620" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:14,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;29&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;30&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;830&quot;,25,1],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;637_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:26}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ff54243e-6442-4edd-9af7-1c493ab6cb1f</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-621" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1695909252944},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1332.9000000953674,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1695909252944},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:21.899999856948853,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1695909252944},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1695909252944}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ff54243e-6442-4edd-9af7-1c493ab6cb1f</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-622" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:15,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;31&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;32&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;Khan&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;631_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:27}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">cc765153-b177-4a6e-9d70-8e7559b98a67</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-623" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:16,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;33&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;34&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;5&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;5&quot;,{}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;632_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:28}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">2bc76c58-a4c5-4c2e-9961-c47bc1cf64b8</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-624" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1.3999998569488525,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1695909256116},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3010.100000143051,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1695909256116},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:159.39999985694885,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1695909256116},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1695909256116}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">ff54243e-6442-4edd-9af7-1c493ab6cb1f</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/v1/pages/ChVDaHJvbWUvMTE3LjAuNTkzOC4xMzIScgltly5wsRK1NRIFDSxIvfISBQ0IdBx9EgUNI6fbbBIFDQum5goSBQ268sw8EgUNBs0xBBIFDWNY2scSBQ0JSJQPEgUNC5RnlhIFDR3LfeoSBQ2vfuaVEgUNHX-iJxIFDdD0gZ8SBQ1hEAXJEgUNlMDGKA==-625" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="alt" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">alt</stringProp>
                <stringProp name="Argument.value">proto</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTE3LjAuNTkzOC4xMzIScgltly5wsRK1NRIFDSxIvfISBQ0IdBx9EgUNI6fbbBIFDQum5goSBQ268sw8EgUNBs0xBBIFDWNY2scSBQ0JSJQPEgUNC5RnlhIFDR3LfeoSBQ2vfuaVEgUNHX-iJxIFDdD0gZ8SBQ1hEAXJEgUNlMDGKA==</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                <stringProp name="Header.value">base64</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Api-Key" elementType="Header">
                <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIe2yQEIpbbJAQipncoBCMzpygEIk6HLAQiLq8wBCJv+zAEIgJnNAQiFoM0BCNy9zQEI4MTNAQi3xc0BCLnKzQEIvNDNAQir1c0BCOrVzQEIx9bNAQj5wNQVGLrSzQE=</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-626" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:17,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;35&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;36&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;857&quot;,25,1],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;637_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:29}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">80c9abc5-35ab-4926-bb2d-5c3bc5e30955</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-627" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0.5,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1695909258775},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1363.3999998569489,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1695909258775},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:18.100000143051147,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1695909258775},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1695909258775}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">80c9abc5-35ab-4926-bb2d-5c3bc5e30955</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-628" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:18,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;SetServerSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;SysGen_Affix&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;859_0&quot;,&quot;TargetId&quot;:&quot;859_0&quot;,&quot;Throttle&quot;:true,&quot;ThrottleFirst&quot;:&quot;true&quot;,&quot;ThrottleId&quot;:&quot;859_0_TG&quot;,&quot;ThrottleTimestamp&quot;:57094.300000190735,&quot;ThrottleValue&quot;:500,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;SysGen_Affix&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;859_0&quot;,&quot;TargetId&quot;:&quot;859_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;NavigationAction&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;859_0&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;872_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:30}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">0d207743-6ebb-4c65-bb07-0e558e8260fb</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-629" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl UpdateLastSelectedControl NavigationAction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:126.70000004768372,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1695909263033},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl UpdateLastSelectedControl NavigationAction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1411.7000000476837,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1695909263033},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl UpdateLastSelectedControl NavigationAction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:14.599999904632568,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1695909263033},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;NavigationAction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1424.4000000953674,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1695909263033}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">0d207743-6ebb-4c65-bb07-0e558e8260fb</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-630" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:19,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;ToggleMark&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;TargetId&quot;:&quot;637_0&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:31}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">71404c9c-7d90-4f22-be8e-b5dae626c75d</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-631" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:60,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1695909270077},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1405.7000000476837,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1695909270077},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:13.099999904632568,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1695909270077},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1695909270077}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">71404c9c-7d90-4f22-be8e-b5dae626c75d</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;-632" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;dat&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:20,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;550_0&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;644_0&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;550_0_TG&quot;,&quot;ThrottleTimestamp&quot;:67444,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:32}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=dat&amp;lng=en-us&amp;</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">41b8159e-182d-4bda-b49d-9179c8c66bfb</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/EWS/Exchange.asmx-633" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;s:Header&gt;&lt;RequestServerVersion Version=&quot;Exchange2015&quot; xmlns=&quot;http://schemas.microsoft.com/exchange/services/2006/types&quot;/&gt;&lt;MailboxCulture xmlns=&quot;http://schemas.microsoft.com/exchange/services/2006/types&quot;&gt;en-US&lt;/MailboxCulture&gt;&lt;/s:Header&gt;&lt;s:Body&gt;&lt;GetChannelEvents xmlns=&quot;http://schemas.microsoft.com/exchange/services/2006/messages&quot;&gt;&lt;ChannelId&gt;7679D918-EF03-4299-9EA8-0CC324290BA7&lt;/ChannelId&gt;&lt;ConnectionTimeout&gt;30&lt;/ConnectionTimeout&gt;&lt;LastNotificationId&gt;9b821518-b2fd-4583-80a2-ec94f2a6da05&lt;/LastNotificationId&gt;&lt;/GetChannelEvents&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">outlook.office365.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/EWS/Exchange.asmx</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">ORIGINALLY FAILED</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-MS-CookieUri-Requested" elementType="Header">
                <stringProp name="Header.name">X-MS-CookieUri-Requested</stringProp>
                <stringProp name="Header.value">t</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="X-User-Identity" elementType="Header">
                <stringProp name="Header.name">X-User-Identity</stringProp>
                <stringProp name="Header.value">mujahid.rizvi@confiz.com</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Iml4ejJWc2pQY09TeG52MndzS3ZDMTJXTUFXbk9WTUJaaURiVE1UZlpYbGciLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL291dGxvb2sub2ZmaWNlMzY1LmNvbS8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MDhjOWFhMS02MTc1LTRmNWUtYmEzMi0yYzA0ZjEwNjJhZjAvIiwiaWF0IjoxNjk1OTA1MzgwLCJuYmYiOjE2OTU5MDUzODAsImV4cCI6MTY5NTkwOTYwMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhVQUFBQXJBampETW84OTVOeUpFbTdEZ0dDVzFXMTBOM1pGTzcvZ1RKbXlzNUpQRkVVQ3ZGcmRQSWwvRm5pRGNwUVpwM1dMTnQ2Lyt4Z2k3VVpYM1o2bVBkeVZtSWtjdUJ4ZU5UWFR6MzBOTTNhV1NNPSIsImFtciI6WyJwd2QiLCJyc2EiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiTWljcm9zb2Z0IE9mZmljZSIsImFwcGlkIjoiZDM1OTBlZDYtNTJiMy00MTAyLWFlZmYtYWFkMjI5MmFiMDFjIiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI5ZDEyOTU4ZS0wODQ4LTQwODItOTNjYi05ZjY1YTcwYzE0MWMiLCJlX2V4cCI6MjYzMTIxLCJlbmZwb2xpZHMiOltdLCJmYW1pbHlfbmFtZSI6IkFsaSBSaXp2aSIsImdpdmVuX25hbWUiOiJTeWVkIE11amFoaWQiLCJpcGFkZHIiOiIzOS40NS4xNjguMzAiLCJsb2dpbl9oaW50IjoiTy5DaVEzT0RjNU5ETXdNUzFsWlRCakxUUTVNR010WVRnNVpTMWpZV0kzWmpka01EazVNeklTSkRrd09HTTVZV0V4TFRZeE56VXROR1kxWlMxaVlUTXlMVEpqTURSbU1UQTJNbUZtTUJvWWJYVnFZV2hwWkM1eWFYcDJhVUJqYjI1bWFYb3VZMjl0SUI4PSIsIm5hbWUiOiJTeWVkIE11amFoaWQgQWxpIFJpenZpIiwib2lkIjoiNzg3OTQzMDEtZWUwYy00OTBjLWE4OWUtY2FiN2Y3ZDA5OTMyIiwicHVpZCI6IjEwMDMyMDAyRDkwREIxODMiLCJyaCI6IjAuQVhNQW9acU1rSFZoWGstNk1pd0U4UVlxOEFJQUFBQUFBUEVQemdBQUFBQUFBQUJ6QUtjLiIsInNjcCI6IkJyYW5mb3JkLUludGVybmFsLlJlYWRXcml0ZSBDYWxlbmRhcnMuUmVhZFdyaXRlIENhbGVuZGFycy5SZWFkV3JpdGUuU2hhcmVkIENvbnRhY3RzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkV3JpdGUuU2hhcmVkIEVBUy5BY2Nlc3NBc1VzZXIuQWxsIEVvcFBvbGljeVN5bmMuQWNjZXNzQXNVc2VyLkFsbCBFb3BQc29yV3MuQWNjZXNzQXNVc2VyLkFsbCBFV1MuQWNjZXNzQXNVc2VyLkFsbCBGaWxlcy5SZWFkV3JpdGUuQWxsIEZpbGVzLlJlYWRXcml0ZS5TaGFyZWQgR3JvdXAuUmVhZFdyaXRlLkFsbCBNYWlsLlJlYWRXcml0ZSBNYWlsLlJlYWRXcml0ZS5TaGFyZWQgTWFpbC5TZW5kIE1haWwuU2VuZC5TaGFyZWQgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBNYXBpSHR0cC5BY2Nlc3NBc1VzZXIuQWxsIE1lc3NhZ2VSZWFjdGlvbi1JbnRlcm5hbC5VcGRhdGUgTm90ZXMuUmVhZCBOb3Rlcy5SZWFkV3JpdGUgT2FiLkFjY2Vzc0FzVXNlci5BbGwgT3V0bG9va1NlcnZpY2UuQWNjZXNzQXNVc2VyLkFsbCBPV0EuQWNjZXNzQXNVc2VyLkFsbCBQZW9wbGUuUmVhZCBQZW9wbGUuUmVhZFdyaXRlIFBsYWNlLlJlYWQuQWxsIFByaXZpbGVnZS5FTFQgU2lnbmFscy5SZWFkIFNpZ25hbHMuUmVhZFdyaXRlIFN1YnN0cmF0ZVNlYXJjaC1JbnRlcm5hbC5SZWFkV3JpdGUgVGFncy5SZWFkV3JpdGUgVGFza3MuUmVhZFdyaXRlIFRhc2tzLlJlYWRXcml0ZS5TaGFyZWQgVG9kby1JbnRlcm5hbC5SZWFkV3JpdGUgVXNlci5SZWFkQmFzaWMgVXNlci5SZWFkQmFzaWMuQWxsIHVzZXJfaW1wZXJzb25hdGlvbiBVc2VyLUludGVybmFsLlJlYWRXcml0ZSIsInNpZCI6ImIzZGYwNDFmLTcyNGMtNGQ0Yi05YjE1LTA4Yzk5MDZiMjEzYyIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6Ik5MR3pPVjFqeWsxd1hDdG8xb1dBNVF0M0R1ajBOSURlRG55bEtxajU2czgiLCJ0aWQiOiI5MDhjOWFhMS02MTc1LTRmNWUtYmEzMi0yYzA0ZjEwNjJhZjAiLCJ1bmlxdWVfbmFtZSI6Im11amFoaWQucml6dmlAY29uZml6LmNvbSIsInVwbiI6Im11amFoaWQucml6dmlAY29uZml6LmNvbSIsInV0aSI6ImF1RFlOMGNBMVVTMEUtZEEyNVFqQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdfQ.Ir5Kz6qm8J1awIqPQejf1km_8N8RjKk7jeZZH7K1qENcp3FkKzSaoMhGgHyJKOmAk1l3_yXfuxmh8hk8N4Wwzahi5Ks2ilgwjdzT_6BgqYy4SzrwV8q_D1j2wf4zIjKBRiCSdAghDzLDOmf2E5KbTfJ5cr2iZIzYRg6TQ837KnI2MH3_Q-6SZxFIHim8OsbyJbWB7e4QTg1qdG7lumf4KjQU69l-Mr4e8gC1pJ1AL4ccQRVlSa-cFZ0g9NrGIGyVnsXLpkbhJ40Oly2dHv2ln343sPmNuC3THO-UL8ZKLuPVXJxAEcqKof4m31w-48QThe08fLNVY73rBKI1cUe6Zg</stringProp>
              </elementProp>
              <elementProp name="Depth" elementType="Header">
                <stringProp name="Header.name">Depth</stringProp>
                <stringProp name="Header.value">0</stringProp>
              </elementProp>
              <elementProp name="Client-Request-Id" elementType="Header">
                <stringProp name="Header.name">Client-Request-Id</stringProp>
                <stringProp name="Header.value">{EEF03ECD-6AE3-48D7-B187-8F852B459AE7}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Microsoft Office/16.0 (Windows NT 10.0; Microsoft Outlook 16.0.4266; Pro)</stringProp>
              </elementProp>
              <elementProp name="X-FeatureVersion" elementType="Header">
                <stringProp name="Header.name">X-FeatureVersion</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact/Services/TelemetryManager.svc/ProcessEventData-634" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:139.20000004768372,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1695909274060},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1888.5,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1695909274060},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:196.5,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1695909274060},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2004.9000000953674,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1695909274060}]}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="TestPlan.comments">ORIGINALLY FAILED</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com/?cmp=DAT&amp;mi=VendVendorContactPerson</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-aid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-aid</stringProp>
                <stringProp name="Header.value">41b8159e-182d-4bda-b49d-9179c8c66bfb</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://acm-fo-uat01.sandbox.operations.dynamics.com</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-bsid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                <stringProp name="Header.value">bdc3126c-6f61-4d89-a383-d801e6342372</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-sid" elementType="Header">
                <stringProp name="Header.name">ms-dyn-sid</stringProp>
                <stringProp name="Header.value">19@2724@@S-1-19-169315071-1131390113-337676954-446305419-73459006-2864208061-3273002221-3047239075-1510753007-4079435192</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="ms-dyn-csrftoken" elementType="Header">
                <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                <stringProp name="Header.value">2D4gN2rcbKfP5CV7K33UGA%3D%3D.PbdjVTQgQkwe21rO3a8YqnqNCAHg8b2BtiBHOb6bbwmAROVnObb3iLd14jS7O%2FP0e%2B2%2BJP%2BSBGpUV6Syc1sK4X4fsFMleuA0NIx%2Brx8Yrf3jfJ0lA%2BYInIYdQwqOhD8S4CWS%2BXhMTjL0J%2B%2FdSX5VmRqId8qqmj4dNkGN3LUPDHRUxHymAPLdtxRf4SU823WwpzDLBtVxoU7WEQXnpO7SGVEc8quRyzVRd16eE3QU8YzCx5Si%2BtREe2RMT2OxJcNjYpQTl5j33TYdRdG%2BQIF2Jum3C0Az%2Bt4IXZN8gT8rb0Rn916I5W0kR7HQ7m6vRs9M5s%2FEKKggGnfszaNrEpNQCg%3D%3D</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
      <com.blazemeter.jmeter.correlation.CorrelationProxyControl guiclass="com.blazemeter.jmeter.correlation.CorrelationProxyControlGui" testclass="com.blazemeter.jmeter.correlation.CorrelationProxyControl" testname="bzm - Correlation Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name">Java</stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Create Contact</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <stringProp name="CorrelationProxyControl.components"></stringProp>
        <collectionProp name="CorrelationProxyControl.groups"/>
        <stringProp name="CorrelationProxyControl.responseFilter"></stringProp>
        <stringProp name="CorrelationProxyControl.correlationHistoryPath">C:\Users\mujahid.rizvi\Downloads\apache-jmeter-5.6.2\bin\History\history-1695907133431.json</stringProp>
      </com.blazemeter.jmeter.correlation.CorrelationProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
